/**
 * generated by Xtext 2.25.0
 */
package dk.sdu.mmmi.mdsd.validation;

import com.google.common.base.Objects;
import dk.sdu.mmmi.mdsd.math.MathExp;
import dk.sdu.mmmi.mdsd.math.MathPackage;
import dk.sdu.mmmi.mdsd.math.Variables;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IterableExtensions;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class MathValidator extends AbstractMathValidator {
  public static final String INVALID_NAME = "invalidName";
  
  @Check
  public void checkGreetingStartsWithCapital(final MathExp exp) {
    EObject _eContainer = exp.eContainer();
    final Variables variables = ((Variables) _eContainer);
    final Function1<MathExp, Boolean> _function = (MathExp v) -> {
      String _name = v.getName();
      String _name_1 = exp.getName();
      return Boolean.valueOf(Objects.equal(_name, _name_1));
    };
    final int amountWithSameName = ((Object[])Conversions.unwrapArray(IterableExtensions.<MathExp>filter(variables.getVariables(), _function), Object.class)).length;
    if ((amountWithSameName > 1)) {
      this.error("Wooow, not more than one allowed", MathPackage.Literals.MATH_EXP__NAME, "Invalid name");
    }
  }
}
